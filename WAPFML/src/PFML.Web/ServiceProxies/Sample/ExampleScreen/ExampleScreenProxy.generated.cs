// ----------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a compiler emitter: FACTS.Framework.Analysis.Generators.OperationMethod.ProxyEmitter
//
// Changes to this file may cause incorrect behavior and will be lost when the code is regenerated.
// </auto-generated>
// ----------------------------------------------------------------------------------------------------

using System;
using System.Threading.Tasks;
using FACTS.Framework.Web;

namespace PFML.Web.ServiceProxies.Sample.ExampleScreen
{

    public static class ExampleScreenProxy
    {

        ///<summary>URL base path location for web service</summary>
        private const string servicePath = "Sample/ExampleScreen";

        ///<summary>ASYNC Web Service call: unknown</summary>
        ///<returns>ASYNC task: unknown</returns>
        public static async Task<System.Collections.Generic.List<PFML.Shared.Model.DbDtos.SecurityPermissionDto>> SearchAsync(string sourceType, string sourceName, string targetType, string targetName, string accessType)
        {
            using (OperationClient client = new OperationClient(servicePath, "Search"))
            {
                client.Value = new { sourceType, sourceName, targetType, targetName, accessType };
                return await client.ReadAsync<System.Collections.Generic.List<PFML.Shared.Model.DbDtos.SecurityPermissionDto>>();
            }
        }

        ///<summary>Web Service call: unknown</summary>
        public static System.Collections.Generic.List<PFML.Shared.Model.DbDtos.SecurityPermissionDto> Search(string sourceType, string sourceName, string targetType, string targetName, string accessType)
        {
            return SearchAsync(sourceType, sourceName, targetType, targetName, accessType).Result;
        }

        ///<summary>ASYNC Web Service call: unknown</summary>
        public static async Task SaveAsync(PFML.Shared.Model.DbDtos.SecurityPermissionDto securityPermissionDto)
        {
            using (OperationClient client = new OperationClient(servicePath, "Save"))
            {
                client.Value = securityPermissionDto;
                await client.SendAsync();
            }
        }

        ///<summary>Web Service call: unknown</summary>
        public static void Save(PFML.Shared.Model.DbDtos.SecurityPermissionDto securityPermissionDto)
        {
            SaveAsync(securityPermissionDto).Wait();
        }

    }

}
